// <auto-generated />
using DigitalProduct.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalProduct.EntityFramework.Migrations
{
    [DbContext(typeof(DigitalProductDbContext))]
    [Migration("20220319180148_AddShoppingProduct")]
    partial class AddShoppingProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("DigitalProduct.Core.Domain.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("DigitalProduct.Core.Domain.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("DigitalProduct.Core.Domain.Shopping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Shoppings", (string)null);
                });

            modelBuilder.Entity("DigitalProduct.Core.Domain.ShoppingProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ShoppingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingId");

                    b.ToTable("ShoppingProducts", (string)null);
                });

            modelBuilder.Entity("DigitalProduct.Core.Domain.ShoppingProduct", b =>
                {
                    b.HasOne("DigitalProduct.Core.Domain.Product", "Product")
                        .WithMany("ProductShoppings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalProduct.Core.Domain.Shopping", "Shopping")
                        .WithMany("ProductShoppings")
                        .HasForeignKey("ShoppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shopping");
                });

            modelBuilder.Entity("DigitalProduct.Core.Domain.Product", b =>
                {
                    b.Navigation("ProductShoppings");
                });

            modelBuilder.Entity("DigitalProduct.Core.Domain.Shopping", b =>
                {
                    b.Navigation("ProductShoppings");
                });
#pragma warning restore 612, 618
        }
    }
}
